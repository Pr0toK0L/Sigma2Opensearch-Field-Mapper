id: 25b9c01c-350d-4b95-bed1-836d04a4f324
logsource:
  product: apache_access
title: SQL Injection Strings In URI
description: Detects potential SQL injection attempts via GET requests in access logs.
tags:
  - attack.initial-access
  - attack.t1190
falsepositives: []
level: high
status: experimental
references:
  - 'https://www.acunetix.com/blog/articles/exploiting-sql-injection-example/'
  - >-
    https://www.acunetix.com/blog/articles/using-logs-to-investigate-a-web-application-attack/
  - 'https://brightsec.com/blog/sql-injection-payloads/'
  - 'https://github.com/payloadbox/sql-injection-payload-list'
  - 'https://book.hacktricks.xyz/pentesting-web/sql-injection/mysql-injection'
author: hoang.nguyen
detection:
  selection:
    apache_method: GET
    apache_path|contains:
      - '@@version'
      - '%271%27%3D%271'
      - '=select '
      - '=select('
      - '=select%20'
      - concat_ws(
      - CONCAT(0x
      - from mysql.innodb_table_stats
      - from%20mysql.innodb_table_stats
      - group_concat(
      - information_schema.tables
      - json_arrayagg(
      - or 1=1#
      - or%201=1#
      - 'order by '
      - order%20by%20
      - 'select * '
      - select database()
      - select version()
      - select%20*%20
      - select%20database()
      - select%20version()
      - select%28sleep%2810%29
      - SELECTCHAR(
      - table_schema
      - UNION ALL SELECT
      - UNION SELECT
      - UNION%20ALL%20SELECT
      - UNION%20SELECT
      - '''1''=''1'
  condition: selection
  falsepositives:
    - Java scripts and CSS Files
    - User searches in search boxes of the respective website
    - >-
      Internal vulnerability scanners can cause some serious FPs when used, if
      you experience a lot of FPs due to this think of adding more filters such
      as "User Agent" strings and more response codes
