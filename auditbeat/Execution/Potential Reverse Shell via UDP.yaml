id: 25b9c01c-350d-4b95-bed1-836d04a4f324
logsource:
  product: linux
  service: auditbeat
title: Potential Reverse Shell via UDP
description: >-
  This detection rule identifies suspicious network traffic patterns associated with UDP reverse shell activity. This activity consists of a sample of an execve, socket and connect syscall executed by the same process, where the auditd.data.a0-1 indicate a UDP connection, ending with an egress connection event. An attacker may establish a Linux UDP reverse shell to bypass traditional firewall restrictions and gain remote access to a target system covertly.
tags:
  - attack.execution
  - attack.command_and_control
  - attack.TA0002
  - attack.T1059
  - attack.TA0011
  - attack.T1071
  - attack.t1059.004
  - attack.auditbeat
falsepositives: []
level: medium
status: experimental
references: []
author: hoang.nguyen
detection:
  condition: selection1 or selection2 or (selection3 and not filter)
  selection1:
    host.os.type: linux
    event.type: start
    event.action: executed
    process.name|contains:
      - bash
      - dash
      - sh
      - tcsh
      - csh
      - zsh
      - ksh
      - fish
      - perl
      - python*
      - nc
      - ncat
      - netcat
      - php*
      - ruby
      - openssl
      - awk
      - telnet
      - lua*
      - socat
  selection2:
    host.os.type: linux
    auditd.data.syscall: socket
    process.name|contains:
      - bash
      - dash
      - sh
      - tcsh
      - csh
      - zsh
      - ksh
      - fish
      - perl
      - python*
      - nc
      - ncat
      - netcat
      - php*
      - ruby
      - openssl
      - awk
      - telnet
      - lua*
      - socat
    auditd.data.a1: "2"
  selection3:
    host.os.type: linux
    event.type: start
    event.action: connected-to
    process.name|contains:
      - bash
      - dash
      - sh
      - tcsh
      - csh
      - zsh
      - ksh
      - fish
      - perl
      - python*
      - nc
      - ncat
      - netcat
      - php*
      - ruby
      - openssl
      - awk
      - telnet
      - lua*
      - socat
    network.direction: egress
    destination.ip: '*'
  filter:
    destination.ip|contains:
      - 127.0.0.0/8
      - 169.254.0.0/16
      - 224.0.0.0/4
      - '::1'
